steps:
  - label: ":linux: :desktop_computer: :hammer_and_wrench: Build NVIDIA driver"
    plugins:
      # Skip xtrx_julia checkout, as we're going to check out the NVIDIA repo and the linux kernel
      - staticfloat/smooth-checkout#sf/add_depth:
          repos:
            # This branch contains our patches, revert to upstream once it's merged
            # X-ref: https://github.com/NVIDIA/open-gpu-kernel-modules/pull/3
            - config:
              - url: "https://github.com/JuliaComputing/open-gpu-kernel-modules"
                ref: "sjk/rebar2"
            # Keep this in-sync with the kernel version built and running on `triadbot`!
            # X-ref: https://github.com/JuliaComputing/DARPA-TRIAD-coreboot-config
            - config:
              - url: "https://github.com/torvalds/linux"
                ref: "v5.18"
                depth: 1
      - JuliaCI/julia#v1:
          version: '1'
      - staticfloat/sandbox#v1:
          rootfs_url: "https://github.com/JuliaComputing/rootfs-images/releases/download/kernel-builder-1/kernel_builder.x86_64.tar.gz"
          rootfs_treehash: "00ea53659b154719aefbe2ad8924b3355ea2792b"
          workspaces:
            - "/cache/repos:/cache/repos"
    commands: |
      echo "--- Install missing apt packages"
      apt update && apt install -y libelf

      echo "--- Prepare kernel for modules"
      make -C linux defconfig -j$$(nproc)
      make -C linux modules_prepare -j$$(nproc)

      echo "--- Build NVIDIA driver"
      mkdir build
      make -C open-gpu-kernel-modules -j$$(nproc) KBUILD_EXTMOD=$$(pwd)/linux MODLIB=$$(pwd)/build
      make -C open-gpu-kernel-modules -j$$(nproc) KBUILD_EXTMOD=$$(pwd)/linux MODLIB=$$(pwd)/build modules_install

      echo "--- Bundle kernel modules"
      tar -czf nvidia-kernel-modules.tar.gz -C build .
    artifact_paths:
      - "nvidia-kernel-modules.tar.gz"
    agents:
      sandbox_capable: "true"
      os: "linux"
      arch: "x86_64"
