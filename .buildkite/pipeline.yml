steps:
  - label: ":linux: :corn: :hammer_and_wrench: Build NVIDIA driver"
    plugins:
      # buildkite does not yet have a way to specify `--depth=1` for `git submodule update`
      - thedyrt/skip-checkout#v0.1.1: ~
      - JuliaCI/julia#v1:
          version: '1'
      - staticfloat/sandbox#v1:
          rootfs_url: "https://github.com/JuliaComputing/rootfs-images/releases/download/kernel-builder-2022-07-12/kernel_builder.x86_64.tar.gz"
          rootfs_treehash: "c0660b88baa6e9607ef859b5daa349fc8de8712c"
          workspaces:
            - "/cache/repos:/cache/repos"
    commands: |
      echo "--- Clone repo (note, this doesn't work for 3rd party forks)"
      git clone $${BUILDKITE_GIT_CLONE_FLAGS} "$${BUILDKITE_REPO}" .
      git checkout --force "$${BUILDKITE_COMMIT}"
      git submodule update --init --recursive --force --depth=1

      # We must do a full kernel build to get `Module.symvers`, which makes the nvidia build happy
      echo "--- Build kernel"
      KERNEL_DIR=$$(pwd)/software/kernel
      make -C "$${KERNEL_DIR}" defconfig -j$$(nproc)
      make -C "$${KERNEL_DIR}" -j$$(nproc)

      echo "--- Build NVIDIA driver"
      NVIDIA_MODLIB=$$(pwd)/nvidia-build
      mkdir -p "$${NVIDIA_MODLIB}"
      make -C software/nvidia-driver -j$$(nproc) SYSSRC="$${KERNEL_DIR}" MODLIB="$${NVIDIA_MODLIB}"
      make -C software/nvidia-driver -j$$(nproc) SYSSRC="$${KERNEL_DIR}" MODLIB="$${NVIDIA_MODLIB}" modules_install

      echo "--- Bundle NVIDIA kernel modules"
      tar -czf nvidia-kernel-modules.tar.gz -C "$${NVIDIA_MODLIB}" .
    artifact_paths:
      - "nvidia-kernel-modules.tar.gz"
    agents:
      sandbox_capable: "true"
      os: "linux"
      arch: "x86_64"
